---
name: dispatch
run-name: ${{ inputs.test }} dispatch
on:
  workflow_dispatch:
    inputs:
      test:
        required: true
        type: choice
        options:
          - test
          - other
        default: test

jobs:
  test:
    if: contains( inputs.test, 'other' ) && !startsWith(github.ref, format('test-{0}', inputs.test))
    runs-on: ubuntu-latest
    steps:
      - name: Invalid release branch
        uses: actions/github-script@v7
        with:
          script: |
            core.setFailed(`git branch ${process.env.GITHUB_REF_NAME} is not a valid release`)
  first:
    if: ${{ !contains( inputs.test, 'other' ) || (contains( inputs.test, 'other' ) && startsWith(github.ref, format('test-{0}', inputs.test))) }}
    runs-on: ubuntu-latest
    steps:
      - name: Set Environment Failed
        uses: actions/github-script@v7
        with:
          script: |
            core.setFailed('Deployment Failed')
  job3:
    needs: job2
    runs-on: ubuntu-latest
    steps:
      - name: Set Environment Failed
        uses: actions/github-script@v7
        with:
          script: |
            core.setFailed('Deployment Failed')

  job1:
    runs-on: ubuntu-latest
    needs: first
    steps:
      - name: Set Environment Failed
        uses: actions/github-script@v7
        if: inputs.test == 'test' && !startsWith(github.ref, format('refs/tags/v', '{0}'))
        env:
          TEST: ${{ inputs.test }}
        with:
          script: |
            core.setFailed(`Deployment Failed ${ process.env.GITHUB_REF_NAME }\n` + process.env.TEST)

  job2:
    runs-on: ubuntu-latest
    needs: first
    steps:
      - name: Set Environment Failed
        if: inputs.test == 'test' && !startsWith(github.ref, format('refs/tags/v', '{0}'))
        run: |
            echo "test"
            echo ${{ github.ref }}
            echo ${{ inputs.app }}
            exit 1
